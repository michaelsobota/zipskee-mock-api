# Zipskee API 1.0
swagger: '2.0'
info:
  title: Zipskee API v1.0
  description: Zipskee Public API | All Methods not defined should 405 | Accept, Content-Type, and Content-Length headers are assumed and not explicitly called out
  version: "1.0"
# the domain of the service
host: localhost:8000
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
paths:
  /login:
    post:
      summary: Get a session token for zipskee
      parameters:
       - name: username
         in: formData
         description: username of person logging in
         required: true
         type: string
       - name: password
         in: formData
         description: password of person logging in
         required: true
         type: string
      tags:
       - Auth
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Login'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /logout:
    post:
      summary: Expire a session token for zipskee
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Auth
      responses:
        200:
          description: ok
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /login/session-info:
    post:
      summary: Authenticate a session token for zipskee
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Auth
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Users'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /users:
    get:
      summary: Retruns a full list of users
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
        - Users
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Users'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    post:
      summary: Creates a new user account
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
       - name: createUserBody
         in: body
         description: user's first name
         required: true
         schema:
           type: object
           properties:
             firstName:
               type: string
             lastName:
               type: string
             email:
               type: string
             password:
               type: string
             passwordConfirmation:
               type: string
      tags:
       - Users
      responses:
        201:
          description: created
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
  /users/{userId}:
    get:
      summary: Returns a particular user's details
      parameters:
        - name: X-ZIPSKEE-SESSION
          in: header
          description: A session token for access control
          required: true
          type: string
        - name: userId
          in: path
          description: the id of the logged-in user
          required: true
          type: integer
      tags:
        - Users
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Users'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    put:
      summary: Updates a particular user's details
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: updateBody
         in: body
         description: the properties of a user you are updating
         required: true
         schema:
           type: object
           properties:
             firstName:
               type: string
             lastName:
               type: string
             genderId:
               type: integer
             hometownCityId:
               type: integer
             currentCityId:
               type: integer
             isTraveling:
               type: boolean
             dob:
               type: integer
               description: epoch time dob
             occupation:
               type: string
             aboutMe:
               type: string
             role:
               type: string
      tags:
       - Users
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
    delete:
      summary: Removes a user account
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
      tags:
       - Users
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Success'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Success'
  /users/{userId}/photos:
    get:
      summary: Returns a list of all photos for a user
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Users
       - Photos
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Photos'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
    post:
      summary: Associates a new picture with a user
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
       - name: photoUpload
         in: body
         description: the photo metadata of the uploaded photo
         required: true
         schema:
           type: object
           properties:
             photoUri:
               type: string
               description: the uri returned after uploading to S3
             isProfileImage:
               type: boolean
               description: if this is to be the profile photo or not
             caption:
               type: string
               description: the photo's caption
      tags:
       - Users
       - Photos
      responses:
        201:
          description: created
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
  /users/{userId}/photos/{photoId}:
    get:
      summary: Returns a specific photo for a user
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: photoId
         in: path
         description: the id of the photo to return, id 0 should return the default photo
         type: integer
         required: true
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Users
       - Photos
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Photos'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
    put:
      summary: Updates an existing photo for a user
      parameters:
       - name: photoUpload
         in: body
         description: the photo metadata of the uploaded photo
         required: true
         schema:
           type: object
           properties:
             photoUri:
               type: string
               description: the uri returned after uploading to S3
             isProfileImage:
               type: boolean
               description: if this is to be the profile photo or not
             caption:
               type: string
               description: the photo's caption
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: photoId
         in: path
         description: the id of the photo to replace
         type: integer
         required: true
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Users
       - Photos
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
    delete:
      summary: Deletes an existing photo for a user
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: integer
       - name: photoId
         in: path
         description: the id of the photo to delete
         type: integer
         required: true
       - name: X-ZIPSKEE-SESSION
         in: header
         description: A session token for access control
         required: true
         type: string
      tags:
       - Users
       - Photos
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
  /users/{userId}/contacts:
    get:
      summary: Returns an array of users you've connected with
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Contacts
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Contacts'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
  /users/{userId}/referrals:
    get:
      summary: Returns an array of referrals
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Referrals
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Referrals'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
  /users/{userId}/referrals/{referralId}:
    get:
      summary: Returns a specific referral
      parameters:
       - name: referralId
         in: path
         description: the id of the referral to pull back
         required: true
         type: integer
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Referrals
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Referrals'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
    delete:
      summary: Deletes a specific referral
      parameters:
       - name: referralId
         in: path
         description: the id of the referral to pull back
         required: true
         type: integer
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Referrals
      responses:
        200:
          description: ok
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    put:
      summary: Updates a specific referral
      parameters:
       - name: referralId
         in: path
         description: the id of the referral to pull back
         required: true
         type: integer
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
       - name: referralBody
         in: body
         description: the referral object being created
         required: true
         schema:
           type: object
           properties:
             userId:
               type: integer
             referredUser:
               type: integer
             thumbsUp:
               type: boolean
             referralText:
               type: string
      tags:
       - Users
       - Referrals
      responses:
        200:
          description: ok
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /users/{userId}/favorites:
    get:
      summary: Returns an array of favorites
      parameters:
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Favorites
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Favorites'
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/Errors"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/Errors"
  /users/{userId}/favorites/{favoriteUserId}:
    post:
      summary: Creates a favorite
      parameters:
       - name: favoriteUserId
         in: path
         description: the id of favorited user
         required: true
         type: integer
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Favorites
      responses:
        201:
          description: created
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    delete:
      summary: Deletes a favorite
      parameters:
       - name: favoriteUserId
         in: path
         description: the id of the user to remove from favorites
         required: true
         type: integer
       - name: userId
         in: path
         description: the id of the logged-in user
         required: true
         type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Users
       - Favorites
      responses:
        200:
          description: ok
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /messages:
    get:
      summary: retrieves inbox messages for a given user (based on token passed in)
      description: list of messages is returned in descending order based on date (newest first)
      parameters:
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
       - name: offset
         in: query
         description: response starts with message n, where n is passed in offset
         required: false
         type: integer
       - name: limit
         in: query
         description: limits number of messages returned
         required: false
         type: integer
      tags:
       - Messages
      responses:
        200:
          description: ok
          headers:
            X-Total-Count:
              type: string
              description: the total number of messages for the user
          schema:
            $ref: '#/definitions/Messages'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /messages/{messageId}:
    get:
      summary: gets a spceific message
      parameters:
        - name: messageId
          in: path
          description: the id of the message
          required: true
          type: integer
        - name: X-ZIPSKEE-SESSION
          in: header
          description: valid session token
          required: true
          type: string
      tags:
        - Messages
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Messages'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    put:
      summary: updates a specific message
      parameters:
       - name: messageId
         in: path
         description: id of the message to be updated
         required: true
         type: integer
       - name: updateBody
         in: body
         description: status to update the message to
         required: true
         schema:
           type: object
           required:
            - readStatus
           properties:
             readStatus:
               type: string
               enum:
                - read
                - unread
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Messages
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
    delete:
      summary: deletes (archives in db) a specific message
      parameters:
       - name: messageId
         in: path
         description: id of the message to be updated
         required: true
         type: integer
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Messages
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
  /messages/user/{userId}:
    post:
      summary: sends a message to a user
      parameters:
       - name: userId
         in: path
         description: id of the user to send a message to
         required: true
         type: integer
       - name: messageBody
         in: body
         description: status to update the message to
         required: true
         schema:
           type: object
           required:
            - messageText
           properties:
             messageText:
               type: string
       - name: X-ZIPSKEE-SESSION
         in: header
         description: valid session token
         required: true
         type: string
      tags:
       - Messages
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Success'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/Errors'
        401:
          description: unauthorized
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/Errors'
definitions:
  Login:
    type: object
    required:
     - authToken
     - links
    properties:
      authToken:
        type: string
      links:
        type: object
        required:
         - rel
         - href
        properties:
          rel:
            type: string
            enum:
             - self
          href:
            type: string
            description: e.g., "/api/v1/users/idOfUser"
  Messages:
    type: object
    required:
     - page
     - messages
    properties:
      page:
        type: object
        required:
         - rel
         - href
        properties:
          rel:
            type: string
            description: tell the client how to page
            enum:
             - next
             - prev
             - first
             - last
          href:
            type: string
            description: next page link e.g., "/api/v1/messages?offset=5&limit=10"
      messages:
        type: array
        items:
          type: object
          required:
           - id
           - readStatus
           - fromUser
           - messageText
          properties:
            id:
              type: integer
            readStatus:
              type: string
              description: status of message
              enum:
               - read
               - unread
            fromUser:
              type: object
              required:
               - id
               - fullName
               - photoUri
               - links
              properties:
                id:
                  type: integer
                  description: the user id of who sent the message
                fullName:
                  type: string
                  description: the full name of the user who sent the message
                photoUri:
                  type: string
                  description: the uri of the default image of the sending user
                links:
                  type: object
                  required:
                   - rel
                   - href
                  properties:
                    rel:
                      type: string
                      enum:
                       - self
                    href:
                      type: string
                      description: e.g., "/api/v1/users/idOfUser"
            messageText:
              type: string
              description: the message
  Favorites:
    type: array
    items:
      type: object
      required:
       - id
       - favorite
      properties:
        id:
          type: integer
        favorite:
          type: object
          required:
           - id
           - fullName
           - photoUri
           - links
          properties:
            id:
              type: integer
              description: the id of the other user
            fullName:
              type: string
            photoUri:
              type: string
            links:
              type: object
              required:
               - rel
               - href
              properties:
                rel:
                  type: string
                  enum:
                   - self
                href:
                  type: string
                  description: e.g., "/api/v1/users/idOfFavorite"
  Contacts:
    type: array
    items:
      type: object
      required:
       - id
       - firstName
       - lastName
       - imageUri
       - links
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        imageUri:
          type: string
        links:
          type: object
          required:
           - rel
           - href
          properties:
            rel:
              type: string
              enum:
               - self
            href:
              type: string
              description: e.g., "/api/v1/users/idOfContact"
  Referrals:
    type: array
    items:
      type: object
      required:
       - id
       - referrer
       - isThumbsedUp
       - referralText
      properties:
        id:
          type: integer
        referrer:
          type: object
          required:
           - id
           - fullName
           - imageUri
           - links
          properties:
            id:
              type: integer
            fullName:
              type: string
            imageUri:
              type: string
            links:
              type: object
              required:
               - rel
               - href
              properties:
                rel:
                  type: string
                  enum:
                   - self
                href:
                  type: string
                  description: e.g., "/api/v1/users/idOfReferrer"
        isThumbsedUp:
          type: boolean
        referralText:
          type: string
  Users:
    type: array
    items:
      type: object
      required:
       - id
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        hometown:
          type: string
        currentCity:
          type: string
        is_traveling:
          type: boolean
        dob:
          type: integer
          description: epoch time dob
        occupation:
          type: string
        about_me:
          type: string
        role:
          type: string
        links:
          type: object
          required:
           - rel
           - href
          properties:
            rel:
              type: string
              enum:
               - self
            href:
              type: string
              description: e.g., "/api/v1/users/idOfUser"
  Photos:
    type: array
    items:
      type: object
      required:
       - id
       - isProfileImage
       - imageUri
       - links
      properties:
        id:
          type: integer
        isProfileImage:
          type: boolean
        imageUri:
          type: string
        links:
          type: object
          required:
           - rel
           - href
          properties:
            rel:
              type: string
              enum:
               - self
            href:
              type: string
              description: e.g., "/api/v1/users/idOfUser"
  Success:
    type: object
    required:
     - code
     - description
    properties:
      code:
        type: integer
      description:
        type: string
        description: short success message
  Errors:
    type: object
    required:
     - code
     - description
    properties:
      code:
        type: integer
        description: internal server error code
      description:
        type: string
        description: short error description